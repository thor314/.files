# see default: https://github.com/alacritty/alacritty/blob/master/alacritty.yml
# also stored locally in same dir
# themes: https://github.com/eendroroy/alacritty-theme
import: # other configuration (if want to break up) format: ~/.files/filename
  - ~/.config/alacritty/themes/challenger_deep.yaml
  # - ~/.config/alacritty/themes/darcula.yaml
  # - ~/.config/alacritty/themes/moonlight_ii_vscode.yaml
live_config_reload: true # Live config reload (changes require restart)
env:
  # this causes bugs on starchy?
  TERM: alacritty

window:
  dimensions:
    columns: 120
    lines: 64
  dynamic_padding: true # Spread additional padding evenly around the terminal content.
  decorations: none # none > full: don't clutter with borders and title bar
  opacity: 0.93 # 0<n<1.0

scrolling:
  history: 10000 # max scrollback
  multiplier: 3 # Scrolling distance multiplier.
  # This is used to allow mouse # scrolling for applications like `man`.
  faux_multiplier: 3

font:
  size: 9.0
  normal:
    #  find mono fonts: fc-list -b | rg -i "family:.*mono | sort | uniq"
    family: "MesloLGS NF" # recommended by powerline10k
    # family: "DejaVu Sans Mono" #
    # family: "Liberation Mono" # Doesn't support all icons
    # family: "Fira Mono" # doesn't support all icons

bell:
  # https://github.com/alacritty/alacritty/blob/master/alacritty.yml#L344
  animation: EaseOutExpo
  duration: 10 # in ms. 0=disabled
  # color: '#ffffff'
  
selection:
  # selected text will be copied to the primary clipboard.
  save_to_clipboard: true

shell:
  program: /usr/bin/fish 
  # program: /usr/zsh  

# where to start new shells
working_directory: None 

mouse:
  #double_click: { threshold: 300 }
  #triple_click: { threshold: 300 }
  hide_when_typing: true # hide mouse

key_bindings:
  # don't map many; they will fight helix/fish keybinds. Prefer to map in fish when mapping commands
  - { key: Return,    mods: Control|Alt,           action: SpawnNewInstance             } # spawn in same dir
  - { key: U,         mods: Control|Alt,           action: ScrollPageUp             }
  - { key: D,         mods: Control|Alt,           action: ScrollPageDown           }
  # - { key: L,         mods: Control|Alt,           action: ClearLogNotice } # clear screen
  # - { key: K,         mods: Control|Alt,           action: ClearSelection } # clear screen
  # - { key: H,         mods: Control|Alt,           action: ClearHistory } # clear screen
  #- { key: Paste,                                       action: Paste          }
  #- { key: Copy,                                        action: Copy           }
  #- { key: L,         mods: Control, mode: ~Vi|~Search, chars: "\x0c"          }
  #- { key: PageUp,    mods: Shift,   mode: ~Alt,        action: ScrollPageUp   }
  #- { key: PageDown,  mods: Shift,   mode: ~Alt,        action: ScrollPageDown }
  #- { key: Home,      mods: Shift,   mode: ~Alt,        action: ScrollToTop    }
  #- { key: End,       mods: Shift,   mode: ~Alt,        action: ScrollToBottom }

  # Vi Mode
  - { key: Space,  mods: Control|Alt, mode: ~Search,    action: ToggleViMode            }
  #- { key: Space,  mods: Shift|Control, mode: ~Search,    action: ToggleViMode            }
  #- { key: Space,  mods: Shift|Control, mode: Vi|~Search, action: ScrollToBottom          }
  #- { key: Escape,                      mode: Vi|~Search, action: ClearSelection          }
  #- { key: I,                           mode: Vi|~Search, action: ToggleViMode            }
  #- { key: I,                           mode: Vi|~Search, action: ScrollToBottom          }
  #- { key: C,      mods: Control,       mode: Vi|~Search, action: ToggleViMode            }
  #- { key: Y,      mods: Control,       mode: Vi|~Search, action: ScrollLineUp            }
  #- { key: E,      mods: Control,       mode: Vi|~Search, action: ScrollLineDown          }
  #- { key: G,                           mode: Vi|~Search, action: ScrollToTop             }
  #- { key: G,      mods: Shift,         mode: Vi|~Search, action: ScrollToBottom          }
  #- { key: B,      mods: Control,       mode: Vi|~Search, action: ScrollPageUp            }
  #- { key: F,      mods: Control,       mode: Vi|~Search, action: ScrollPageDown          }
  #- { key: U,      mods: Control,       mode: Vi|~Search, action: ScrollHalfPageUp        }
  #- { key: D,      mods: Control,       mode: Vi|~Search, action: ScrollHalfPageDown      }
  #- { key: Y,                           mode: Vi|~Search, action: Copy                    }
  #- { key: Y,                           mode: Vi|~Search, action: ClearSelection          }
  #- { key: Copy,                        mode: Vi|~Search, action: ClearSelection          }
  #- { key: V,                           mode: Vi|~Search, action: ToggleNormalSelection   }
  #- { key: V,      mods: Shift,         mode: Vi|~Search, action: ToggleLineSelection     }
  #- { key: V,      mods: Control,       mode: Vi|~Search, action: ToggleBlockSelection    }
  #- { key: V,      mods: Alt,           mode: Vi|~Search, action: ToggleSemanticSelection }
  #- { key: Return,                      mode: Vi|~Search, action: Open                    }
  #- { key: K,                           mode: Vi|~Search, action: Up                      }
  #- { key: J,                           mode: Vi|~Search, action: Down                    }
  #- { key: H,                           mode: Vi|~Search, action: Left                    }
  #- { key: L,                           mode: Vi|~Search, action: Right                   }
  #- { key: Up,                          mode: Vi|~Search, action: Up                      }
  #- { key: Down,                        mode: Vi|~Search, action: Down                    }
  #- { key: Left,                        mode: Vi|~Search, action: Left                    }
  #- { key: Right,                       mode: Vi|~Search, action: Right                   }
  #- { key: Key0,                        mode: Vi|~Search, action: First                   }
  #- { key: Key4,   mods: Shift,         mode: Vi|~Search, action: Last                    }
  #- { key: Key6,   mods: Shift,         mode: Vi|~Search, action: FirstOccupied           }
  #- { key: H,      mods: Shift,         mode: Vi|~Search, action: High                    }
  #- { key: M,      mods: Shift,         mode: Vi|~Search, action: Middle                  }
  #- { key: L,      mods: Shift,         mode: Vi|~Search, action: Low                     }
  #- { key: B,                           mode: Vi|~Search, action: SemanticLeft            }
  #- { key: W,                           mode: Vi|~Search, action: SemanticRight           }
  #- { key: E,                           mode: Vi|~Search, action: SemanticRightEnd        }
  #- { key: B,      mods: Shift,         mode: Vi|~Search, action: WordLeft                }
  #- { key: W,      mods: Shift,         mode: Vi|~Search, action: WordRight               }
  #- { key: E,      mods: Shift,         mode: Vi|~Search, action: WordRightEnd            }
  #- { key: Key5,   mods: Shift,         mode: Vi|~Search, action: Bracket                 }
  #- { key: Slash,                       mode: Vi|~Search, action: SearchForward           }
  #- { key: Slash,  mods: Shift,         mode: Vi|~Search, action: SearchBackward          }
  #- { key: N,                           mode: Vi|~Search, action: SearchNext              }
  #- { key: N,      mods: Shift,         mode: Vi|~Search, action: SearchPrevious          }

  # Search Mode
  #- { key: Return,                mode: Search|Vi,  action: SearchConfirm         }
  #- { key: Escape,                mode: Search,     action: SearchCancel          }
  #- { key: C,      mods: Control, mode: Search,     action: SearchCancel          }
  #- { key: U,      mods: Control, mode: Search,     action: SearchClear           }
  #- { key: W,      mods: Control, mode: Search,     action: SearchDeleteWord      }
  #- { key: P,      mods: Control, mode: Search,     action: SearchHistoryPrevious }
  #- { key: N,      mods: Control, mode: Search,     action: SearchHistoryNext     }
  #- { key: Up,                    mode: Search,     action: SearchHistoryPrevious }
  #- { key: Down,                  mode: Search,     action: SearchHistoryNext     }
  #- { key: Return,                mode: Search|~Vi, action: SearchFocusNext       }
  #- { key: Return, mods: Shift,   mode: Search|~Vi, action: SearchFocusPrevious   }

  # (Windows, Linux, and BSD only)
  #- { key: V,              mods: Control|Shift, mode: ~Vi,        action: Paste            }
  #- { key: C,              mods: Control|Shift,                   action: Copy             }
  #- { key: F,              mods: Control|Shift, mode: ~Search,    action: SearchForward    }
  #- { key: B,              mods: Control|Shift, mode: ~Search,    action: SearchBackward   }
  #- { key: C,              mods: Control|Shift, mode: Vi|~Search, action: ClearSelection   }
  #- { key: Insert,         mods: Shift,                           action: PasteSelection   }
  #- { key: Key0,           mods: Control,                         action: ResetFontSize    }
  #- { key: Equals,         mods: Control,                         action: IncreaseFontSize }
  #- { key: Plus,           mods: Control,                         action: IncreaseFontSize }
  #- { key: NumpadAdd,      mods: Control,                         action: IncreaseFontSize }
  #- { key: Minus,          mods: Control,                         action: DecreaseFontSize }
  #- { key: NumpadSubtract, mods: Control,                         action: DecreaseFontSize }

### Reference
#   - ClearHistory #       Remove the terminal's scrollback history.
#   - Hide #       Hide the Alacritty window.
#   - Minimize #       Minimize the Alacritty window.
#   - Quit #       Quit Alacritty.
#   - ToggleFullscreen
#   - SpawnNewInstance #       Spawn a new instance of Alacritty.
#   - CreateNewWindow #       Create a new Alacritty window from the current process.
#   - ClearLogNotice #       Clear Alacritty's UI warning and error notice.
#   - ClearSelection #       Remove the active selection.
#   - ReceiveChar
#   - None
#
# - Vi mode exclusive actions:
#   - Open
#       Perform the action of the first matching hint under the vi mode cursor with `mouse.enabled` set to `true`.
#   - ToggleNormalSelection
#   - ToggleLineSelection
#   - ToggleBlockSelection
#   - ToggleSemanticSelection #       Toggle semantic selection based on `selection.semantic_escape_chars`.
#
# - Vi mode exclusive cursor motion actions:
#   - Up #       One line up.
#   - Down #       One line down.
#   - Left #       One character left.
#   - Right #       One character right.
#   - First #       First column, or beginning of the line when already at the first column.
#   - Last #       Last column, or beginning of the line when already at the last column.
#   - FirstOccupied
#       First non-empty cell in this terminal row, or first non-empty cell of
#       the line when already at the first cell of the row.
#   - High #       Top of the screen.
#   - Middle #       Center of the screen.
#   - Low #       Bottom of the screen.
#   - SemanticLeft #       Start of the previous semantically separated word.
#   - SemanticRight #       Start of the next semantically separated word.
#   - SemanticLeftEnd #       End of the previous semantically separated word.
#   - SemanticRightEnd #       End of the next semantically separated word.
#   - WordLeft #       Start of the previous whitespace separated word.
#   - WordRight #       Start of the next whitespace separated word.
#   - WordLeftEnd #       End of the previous whitespace separated word.
#   - WordRightEnd #       End of the next whitespace separated word.
#   - Bracket #       Character matching the bracket at the cursor's location.
#   - SearchNext #       Beginning of the next match.
#   - SearchPrevious #       Beginning of the previous match.


#    see: https://docs.rs/glutin/*/glutin/event/enum.VirtualKeyCode.html#variants
#    Find hex scancodes:    `showkey --scancodes`.
#    To find escape codes for bindings
#    like `PageUp` (`"\x1b[5~"`), you can run the command `showkey -a` 
# - `action`: Execute a predefined action
#   - ToggleViMode
#   - SearchForward         Start searching toward the right of the search origin.
#   - SearchBackward        Start searching toward the left of the search origin.
#   - Copy
#   - Paste
#   - IncreaseFontSize
#   - DecreaseFontSize
#   - ResetFontSize
#   - ScrollPageUp
#   - ScrollPageDown
#   - ScrollHalfPageUp
#   - ScrollHalfPageDown
#   - ScrollLineUp
#   - ScrollLineDown
#   - ScrollToTop
#   - ScrollToBottom
#   - ClearHistory #       Remove the terminal's scrollback history.
#   - Hide #       Hide the Alacritty window.
#   - Minimize #       Minimize the Alacritty window.
#   - Quit #       Quit Alacritty.
#   - ToggleFullscreen
#   - SpawnNewInstance #       Spawn a new instance of Alacritty.
#   - CreateNewWindow #       Create a new Alacritty window from the current process.
#   - ClearLogNotice #       Clear Alacritty's UI warning and error notice.
#   - ClearSelection #       Remove the active selection.
#   - ReceiveChar
#   - None
#
# - Vi mode exclusive actions:
#   - Open
#       Perform the action of the first matching hint under the vi mode cursor with `mouse.enabled` set to `true`.
#   - ToggleNormalSelection
#   - ToggleLineSelection
#   - ToggleBlockSelection
#   - ToggleSemanticSelection #       Toggle semantic selection based on `selection.semantic_escape_chars`.
#
# - Vi mode exclusive cursor motion actions:
#   - Up #       One line up.
#   - Down #       One line down.
#   - Left #       One character left.
#   - Right #       One character right.
#   - First #       First column, or beginning of the line when already at the first column.
#   - Last #       Last column, or beginning of the line when already at the last column.
#   - FirstOccupied
#       First non-empty cell in this terminal row, or first non-empty cell of
#       the line when already at the first cell of the row.
#   - High #       Top of the screen.
#   - Middle #       Center of the screen.
#   - Low #       Bottom of the screen.
#   - SemanticLeft #       Start of the previous semantically separated word.
#   - SemanticRight #       Start of the next semantically separated word.
#   - SemanticLeftEnd #       End of the previous semantically separated word.
#   - SemanticRightEnd #       End of the next semantically separated word.
#   - WordLeft #       Start of the previous whitespace separated word.
#   - WordRight #       Start of the next whitespace separated word.
#   - WordLeftEnd #       End of the previous whitespace separated word.
#   - WordRightEnd #       End of the next whitespace separated word.
#   - Bracket #       Character matching the bracket at the cursor's location.
#   - SearchNext #       Beginning of the next match.
#   - SearchPrevious #       Beginning of the previous match.
#   - SearchStart #       Start of the match to the left of the vi mode cursor.
#   - SearchEnd #       End of the match to the right of the vi mode cursor.
#
# - Search mode exclusive actions:
#   - SearchFocusNext #       Move the focus to the next search match.
#   - SearchFocusPrevious #       Move the focus to the previous search match.
#   - SearchConfirm
#   - SearchCancel
#   - SearchClear #       Reset the search regex.
#   - SearchDeleteWord #       Delete the last word in the search regex.
#   - SearchHistoryPrevious #       Go to the previous regex in the search history.
#   - SearchHistoryNext #       Go to the next regex in the search history.
#
# - Linux/BSD exclusive actions:
#
#   - CopySelection #       Copy from the selection buffer.
#   - PasteSelection #       Paste from the selection buffer.
#
# - `command`: Fork and execute a specified command plus arguments args. For example:
#       `{ program: "alacritty", args: ["-e", "vttest"] }`
#
#    A `~` operator can be used before a mode to apply the binding whenever
#    the mode is *not* active, e.g. `~Alt`. For no-op: bind to None
